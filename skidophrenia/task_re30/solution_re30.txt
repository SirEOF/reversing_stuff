  *in entry0
gdb) x/20x 0x400700
0x400700:       0x48    0x89    0x6c    0x24    0xd8    0x4c    0x89    0x64
0x400708:       0x24    0xe0    0x48    0x8d    0x2d    0xbb    0x01    0x20
0x400710:       0x00    0x4c    0x8d    0x25
(gdb) 


(gdb) x/s 0x400700
0x400700:       "H\211l$\330L\211d$\340H\215-\273\001 "


  *in main
(gdb) x/s 0x400808
0x400808:	"g9f.F\003Qv\001\033\003;,"


(gdb) x/10x 0x400808
0x400808:	0x67	0x39	0x66	0x2e	0x46	0x03	0x51	0x76
0x400810:	0x01	0x1b



(gdb) x/s 0x4007f9                                                                                                                                                                              
0x4007f9:       "KO"



 === first block of main===
  *checking wheather argc is 2
 
|           0x00400604      4883ec08       sub rsp, 8                                                                                                                                           
|           0x00400608      83ff02         cmp edi, 2                                                                                                                                           
|       ,=< 0x0040060b      7407           je 0x400614                 ;[1]   



=== first 0x400614 ===
            
            0x00400614      488b5608       mov rdx, qword [rsi + 8]    ; [0x8:8]=0                                                                                                              
|      |    0x00400618      31c0           xor eax, eax                                                                                                                                         
|      |    0x0040061a      4883c9ff       or rcx, 0xffffffffffffffff                                                                                                                           
|      |    0x0040061e      4889d7         mov rdi, rdx                                                                                                                                         
|      |    0x00400621      f2ae           repne scasb al, byte [rdi]                                                                                                                           
|      |    0x00400623      4883f9f6       cmp rcx, 0xf6                                                                                                                                        
|      |,=< 0x00400627      752f           jne 0x400658                ;[3]   # we have to pass this condition 

  *The SCAS instruction is used to scan a string (SCAS = SCan A String). 
  *It compares the content of the accumulator (AL, AX, or EAX) against the current value pointed at by ES:[EDI].
  *When used together with the REPNE prefix (REPeat while Not Equal), SCAS scans the string searching for the first string element which is equal to the value in the accumulator. 




=== second 0x400629  ===

|      ||   0x00400629      b908084000     mov ecx, str.g9f.F          ; "g9f.F.Qv...;," @ 0x400808                                                                                               
|      ||   0x0040062e      31c0           xor eax, eax                                                                                                                                           
|     .---> 0x00400630      0fbe32         movsx esi, byte [rdx]       #third block will jump back here, take one char from our cli argument                                                                                                                          
|     |||   0x00400633      0fbe39         movsx edi, byte [rcx]                                                                                                                               
|     |||   0x00400636      31c6           xor esi, eax                                                                                                                                           
|     |||   0x00400638      39fe           cmp esi, edi                                                                                                                                           
|    ,====< 0x0040063a      751c           jne 0x400658                ;[3]   #we have to pass this condition 


=== third 0x0040063c ===

|     |||   0x0040063c      83c00a         add eax, 0xa                                                                                                                                           
|     |||   0x0040063f      48ffc2         inc rdx                                                                                                                                                
|     |||   0x00400642      48ffc1         inc rcx                                                                                                                                                
|     |||   0x00400645      83f850         cmp eax, 0x50               ; 'P' ; 'P'     # will go six times through the loop                                                                                                           
|     |`==< 0x00400648      75e6           jne 0x400630                ;[2]                                                                                                                       
                                                                                                                


=== solution ===

  * I don't know what the repne scasb test does, but without recognizing it works either
  * it will simply take one char from our cli string xor's it with {0xa,0x14,0x1e,0x28,0x32,0x3c,0x42}
  * and compares it to the constant string "g9f.F"...
  * do xor on the constant string char by char and we will get our password 


<code bash>
fir_val=0x67
sec_val=$(printf '0x%X\n' $(( 0x39 ^ 0xa ))) 
thi_val=$(printf '0x%X\n' $(( 0x66 ^ 0x14 ))) 
fou_val=$(printf '0x%X\n' $(( 0x2e ^ 0x1e ))) 
fif_val=$(printf '0x%X\n' $(( 0x46 ^ 0x28 ))) 
six_val=$(printf '0x%X\n' $(( 0x03 ^ 0x32 ))) 
sev_val=$(printf '0x%X\n' $(( 0x51 ^ 0x3c ))) 
eig_val=$(printf '0x%X\n' $(( 0x76 ^ 0x46 ))) 


echo $fir_val + $sec_val + $thi_val + $fou_val + $fif_val + $six_val + $sev_val + $eig_val 
</code>

./re30 g3r0n1m0


==== debugging ====

  *it hasn't own main function as it uses glibc main-function, so we have to do a breakpoint on glibc call

(gdb) br *__libc_start_main



==== miasm ====

python depgraph.py re30 0x00400614 0x00400629 RSI
             
